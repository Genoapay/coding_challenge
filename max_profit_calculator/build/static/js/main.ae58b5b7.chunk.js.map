{"version":3,"sources":["components/AppHeader.js","components/AppSidebar.js","components/PricePicker.js","components/ProfitResult.js","App.js","reportWebVitals.js","index.js"],"names":["Header","Layout","AppHeader","react_default","a","createElement","style","height","textAlign","padding","color","backgroundImage","borderShadow","fontWeight","fontSize","margin","Sider","AppSidebar","_ref","priceMap","items","Map","Object","toConsumableArray","entries","sort","forEach","price","time","push","timeline","Item","key","label","width","theme","card","title","headStyle","background","className","mode","PricePicker","addPrice","updateTimeline","updateProfit","_useState","useState","_useState2","slicedToArray","timeString","setTimeString","_useState3","_useState4","setTime","_useState5","_useState6","setPrice","validTime","hours","sortTime","generatePriceList","sortedList","startTime","endTime","priceList","startMonent","moment","endMonent","isAfter","format","get","add","Fragment","row","align","justify","col","span","time_picker","onChange","yesterday","dateTime","concat","value","placeholder","input_number","addonBefore","defaultValue","es_button","type","onClick","message","info","size","startTIme","length","Axios","post","identifier","then","response","maxProfit","data","buyValue","sellValue","catch","error","ProfitResult","profit","content","list","grid","gutter","xs","sm","md","lg","xl","xxl","dataSource","renderItem","item","Content","App","updatePriceMap","setProfit","layout","components_AppHeader","components_AppSidebar","components_PricePicker","pm","set","components_ProfitResult","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.ae58b5b7.chunk.js","sourcesContent":["import React from 'react';\nimport { Layout } from \"antd\";\n\nconst { Header } = Layout;\n\nconst AppHeader = () => {\n\n    return (\n        <Header\n            style={{\n                height: \"200px\",\n                textAlign: \"center\",\n                padding: \"30px\",\n                color: \"#fafafa\",\n                backgroundImage: \"radial-gradient(circle, #1890ff 0%, #e6f7ff 100%)\",\n                borderShadow: \"0 2px 8px #f0f1f2\"\n            }}\n        >\n            <h1 style={{ fontWeight: 700, fontSize: \"50px\", color: \"#434343\", margin: \"50px auto\" }}>\n                Max Profit Calculator\n            </h1>\n            \n        </Header>\n    );\n}\n\nexport default AppHeader;","import React from 'react';\nimport { Layout, Timeline, Card } from \"antd\";\n\nconst { Sider } = Layout;\n\nconst AppSidebar = ({priceMap}) => {\n\n    let items = [];\n    var sortedMap = new Map([...priceMap.entries()].sort());\n    sortedMap.forEach((price, time) => {\n        items.push(<Timeline.Item key={time} label={time}>{price}</Timeline.Item>)\n    })\n    return (\n        <Sider width={400} theme=\"light\" >\n            <Card title=\"Price List\" headStyle={{background: \"#91d5ff\"}} className=\"card\">\n                <Timeline mode=\"left\">\n                    {items}\n            </Timeline>\n            </Card>\n        </Sider>\n    );\n}\n\nexport default AppSidebar;","import React, {useState} from 'react';\nimport { Row, Col, TimePicker, InputNumber, Button, message } from \"antd\";\nimport moment from 'moment';\nimport Axios from 'axios';\n\nconst format = 'HH:mm';\nconst identifier = \"calculator-client\";\n\nconst PricePicker = ({addPrice, updateTimeline, priceMap, updateProfit}) => {\n\n    const [timeString, setTimeString] = useState(\"\");\n    const [time, setTime] = useState(null);\n\n    const [price, setPrice] = useState(0);\n\n    const handleAddPrice = () => {\n        if(!timeString || price == null) {\n            message.info('Invalid time or price');\n            return;\n        } \n        if(!validTime()) {\n            message.info('Trading time must be from 10:00 to 16:00');\n            return;\n        }\n        addPrice(timeString, price);\n    };\n\n    const validTime = () => {\n        if(time.hours() < 10 || time.hours() >=16 ) {\n            return false;\n        }\n        return true;\n    }\n\n    const timeChange = (time, timeString) => {\n        let yesterday = moment().add(-1, 'day').format(\"yyyy-MM-DD\");\n        let dateTime = `${yesterday} ${timeString}`;\n        setTimeString(dateTime);\n        setTime(time);\n    };\n\n    const priceChange = (value) => {\n        setPrice(value);\n    };\n\n    const maxProfit = () => {\n        if(!priceMap || priceMap.size === 0) {\n            message.info('No price list');\n            return;\n        }\n\n        let sortedList = sortTime();\n        let startTIme = sortedList[0][0];\n        let endTime = sortedList[sortedList.length - 1][0];\n        let priceList = generatePriceList(sortedList, startTIme, endTime);\n        Axios.post('http://localhost:8088/maxProfit', {\n            identifier: identifier,\n            startTime: startTIme,\n            endTime: endTime,\n            priceList: priceList\n        })\n        .then((response) => {\n            updateProfit({\n                maxProfit: response.data.maxProfit,\n                buyValue: response.data.buyValue,\n                sellValue: response.data.sellValue\n            })\n        })\n        .catch((error) => {\n            message.error(error.response.data.message);\n        });\n    };\n\n    const sortTime = () => {\n        return [...priceMap.entries()].sort();\n    }\n\n    const generatePriceList = (sortedList, startTime, endTime) => {\n        let priceList = [];\n        let startMonent = moment(startTime);\n        let endMonent = moment(endTime);\n        while(!startMonent.isAfter(endMonent)) {\n            let time = startMonent.format(\"yyyy-MM-DD HH:mm\");\n            let price = priceMap.get(time);\n            priceList.push(price ? price : null);\n            startMonent.add(1, \"m\");\n        }\n        return priceList;\n    }\n\n    const resetAll = () => {\n        setTimeString(\"\");\n        setTime(null);\n        setPrice(0);\n        updateTimeline(new Map());\n        updateProfit({});\n    };\n\n    return (\n        <>\n            <Row align=\"center\" justify=\"center\" className=\"row\">\n                <Col span={8} className=\"col\">\n                    <TimePicker format={format} style={{width: \"100%\"}} onChange={timeChange} value={time} placeholder=\"Choose a time between 10:00 and 16:00\"/>\n                </Col>\n                <Col span={8} className=\"col\">\n                <InputNumber addonBefore=\"$\" style={{width: \"100%\"}} defaultValue={0} onChange={priceChange} value={price}/>\n\n                </Col>\n                <Col span={8} className=\"col\">\n                    <Button type=\"primary\" style={{width: \"100%\"}} onClick={handleAddPrice}>Add Price</Button>\n                </Col>\n                \n            </Row>\n            <Row align=\"center\" justify=\"center\" className=\"row\">\n                <Col span={12} className=\"col\">\n                    <Button type=\"primary\" style={{width: \"100%\"}} onClick={maxProfit}>Calculate Max Profit</Button>\n                </Col>\n                <Col span={12} className=\"col\">\n                    <Button type=\"secondary\" style={{width: \"100%\"}} onClick={resetAll}>Reset</Button>\n                </Col>\n            </Row>\n        </>\n    );\n}\n\nexport default PricePicker;","import React from 'react';\nimport { List, Card } from \"antd\";\n\nconst ProfitResult = ({profit}) => {\n  const data = [\n    {\n      title: 'Max Profit',\n      content: profit  ? profit.maxProfit : null\n    },\n    {\n      title: 'Buy Value',\n      content: profit  ? profit.buyValue : null\n    },\n    {\n      title: 'Sell Value',\n      content: profit  ? profit.sellValue: null\n    },\n  ];\n    return (\n        <List\n            grid={{\n            gutter: 16,\n            xs: 1,\n            sm: 2,\n            md: 4,\n            lg: 4,\n            xl: 6,\n            xxl: 3,\n            }}\n            dataSource={data}\n            renderItem={item => (\n            <List.Item>\n                <Card title={item.title}>{item.content}</Card>\n            </List.Item>\n            )}\n        />\n    );\n};\n\nexport default ProfitResult;\n\n","import React from 'react';\nimport {  Layout, Card } from 'antd';\n\nimport AppHeader from './components/AppHeader';\nimport AppSidebar from './components/AppSidebar';\nimport PricePicker from './components/PricePicker';\nimport ProfitResult from './components/ProfitResult';\n\nimport 'antd/dist/antd.css';\nimport './App.css';\nimport { useState } from 'react';\n\nconst { Content } = Layout;\n\nfunction App() {\n  const [priceMap, updatePriceMap] = useState(new Map());\n  const [profit, setProfit] = useState({});\n\n  const addPrice = (time, price) => {\n    var pm = new Map(priceMap);\n    pm.set(time, price);\n    updatePriceMap(pm);\n  };\n\n  return (\n     <Layout style={{height: \"100%\", background: \"#fff\"}} >\n      <AppHeader />\n      <Layout>\n        <AppSidebar priceMap={priceMap}/>\n        <Content style={{background: \"#fff\"}}>\n          <Card title=\"Price Picker\" headStyle={{background: \"#91d5ff\"}} className=\"card\">\n            <PricePicker addPrice={addPrice} updateTimeline={updatePriceMap} priceMap={priceMap} updateProfit={setProfit}/>\n          </Card>\n          <Card title=\"Result\" headStyle={{background: \"#91d5ff\"}} className=\"card\">\n            <ProfitResult profit={profit}/>\n          </Card>\n        </Content>\n      </Layout>\n    </Layout>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}